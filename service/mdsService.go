["package service","","import (","\t\"errors\"","\t\"go-Beitler-api/repository\"","\t\"time\"",")","","type MdsService interface {","\tDelete(id int) error","\tCreate(name, comments string, effectiveFrom, effectiveTo time.Time, isPPAgreed bool, documentPath string) (int, error)","\tGetAll() ([]repository.MdsEntry, error)","}","","type mdsService struct {","\trepo repository.MdsRepository","}","","func NewMdsService(repo repository.MdsRepository) MdsService {","\treturn &mdsService{repo}","}","","func (s *mdsService) Delete(id int) error {","\treturn s.repo.Delete(id)","}","","func (s *mdsService) Create(name, comments string, effectiveFrom, effectiveTo time.Time, isPPAgreed bool, documentPath string) (int, error) {","\tif name == \"\" {","\t\treturn 0, errors.New(\"name is required\")","\t}","","\tif effectiveFrom.IsZero() {","\t\treturn 0, errors.New(\"effective from date is required\")","\t}","","\tif effectiveTo.IsZero() {","\t\treturn 0, errors.New(\"effective to date is required\")","\t}","","\tif effectiveTo.Before(effectiveFrom) {","\t\treturn 0, errors.New(\"effective to date cannot be earlier than effective from date\")","\t}","","\tentry := &repository.MdsEntry{","\t\tName:          name,","\t\tComments:      comments,","\t\tEffectiveFrom: effectiveFrom,","\t\tEffectiveTo:   effectiveTo,","\t\tIsPPAgreed:    isPPAgreed,","\t\tDocumentPath:  documentPath,","\t}","","\treturn s.repo.Create(entry)","}","","func (s *mdsService) GetAll() ([]repository.MdsEntry, error) {","\treturn s.repo.GetAll()","}"]
